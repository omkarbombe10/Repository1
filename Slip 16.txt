const { MongoClient } = require('mongodb');

const url = 'mongodb://localhost:27017';  
const dbName = 'Bank';
const collectionName = 'Bank';

async function BankRecords() {
  const client = new MongoClient(url, { useNewUrlParser: true, useUnifiedTopology: true });

  try {
    await client.connect();
    console.log('Connected to the database.');

    const db = client.db(dbName);
    const collection = db.collection(collectionName);

    const bankRecords = await collection.find().toArray();
    console.log('All Bank Records:', bankRecords);

    
    const bankNameToDelete = 'HDFC'; 
    const deleteResult = await collection.deleteOne({ name: bankNameToDelete });

    if (deleteResult.deletedCount === 1) {
      console.log(`Successfully deleted the bank record: ${bankNameToDelete}`);
    } else {
      console.log(`No bank record found with the name: ${bankNameToDelete}`);
    }

 
    const remainingBankRecords = await collection.find().toArray();
    console.log('Remaining Bank Records:', remainingBankRecords);

  } catch (err) {
    console.error('Error:', err);
  } finally {
    await client.close();
  }
}

BankRecords();





Q2)Create an Express.js web application with an HTML form to register users. On submission, the data should be stored in a MongoDB collection. Display a success message after storing the data.

npm init -y
npm install express mongoose

const express = require('express');
const mongoose = require('mongoose');

const app = express();
app.use(express.urlencoded({ extended: true }));
mongoose.connect('mongodb://localhost:27017/userDB', { // use your db name
useNewUrlParser: true,
useUnifiedTopology: true
});
const userSchema = new mongoose.Schema({
username: String,
email: String
});

const User = mongoose.model('User', userSchema);
app.get('/', (req, res) => {
res.send(`
<h1>Register User</h1>
<form action="/register" method="POST">
<input type="text" name="username" placeholder="Username" required>
<input type="email" name="email" placeholder="Email" required>
<button type="submit">Register</button>
</form>
`);
});

app.post('/register', (req, res) => {
const { username, email } = req.body;

const newUser = new User({ username, email });

newUser.save((err) => {
if (err) {
res.status(500).send('Error registering user');
} else {
res.send('User registered successfully!');
}
});
});
app.listen(3000, () => {
console.log('Server is running on http://localhost:3000');
});
Save as.js

MongoDB
use userDB
db.createCollection("users")
db.users.insertMany([
{ username: "alice", email: "alice@example.com" },
{ username: "bob", email: "bob@example.com" },
{ username: "charlie", email: "charlie@example.com" }
])

